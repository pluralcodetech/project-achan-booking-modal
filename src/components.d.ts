/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface HomePage {
    }
    interface MainScreen {
    }
    interface ModalButton {
        "class": string;
        "externalbtn": string;
    }
    interface ModalComponent {
        "logoIcon": string;
        "opened": boolean;
        "previousBtn": string;
        "requiredid": string;
    }
    interface PageArrivalToFinalDestination {
        "logoIcon": string;
    }
    interface PagePickupPoint {
        "logoIcon": string;
    }
    interface PagePickuppointAirportDestination {
        "logoIcon": string;
    }
    interface PageRoundtripPickup {
        "logoIcon": string;
    }
    interface RouteCard {
        "faqIcon": string;
        "pathname": string;
        "places": string;
    }
    interface TitleComponent {
    }
}
declare global {
    interface HTMLHomePageElement extends Components.HomePage, HTMLStencilElement {
    }
    var HTMLHomePageElement: {
        prototype: HTMLHomePageElement;
        new (): HTMLHomePageElement;
    };
    interface HTMLMainScreenElement extends Components.MainScreen, HTMLStencilElement {
    }
    var HTMLMainScreenElement: {
        prototype: HTMLMainScreenElement;
        new (): HTMLMainScreenElement;
    };
    interface HTMLModalButtonElement extends Components.ModalButton, HTMLStencilElement {
    }
    var HTMLModalButtonElement: {
        prototype: HTMLModalButtonElement;
        new (): HTMLModalButtonElement;
    };
    interface HTMLModalComponentElement extends Components.ModalComponent, HTMLStencilElement {
    }
    var HTMLModalComponentElement: {
        prototype: HTMLModalComponentElement;
        new (): HTMLModalComponentElement;
    };
    interface HTMLPageArrivalToFinalDestinationElement extends Components.PageArrivalToFinalDestination, HTMLStencilElement {
    }
    var HTMLPageArrivalToFinalDestinationElement: {
        prototype: HTMLPageArrivalToFinalDestinationElement;
        new (): HTMLPageArrivalToFinalDestinationElement;
    };
    interface HTMLPagePickupPointElement extends Components.PagePickupPoint, HTMLStencilElement {
    }
    var HTMLPagePickupPointElement: {
        prototype: HTMLPagePickupPointElement;
        new (): HTMLPagePickupPointElement;
    };
    interface HTMLPagePickuppointAirportDestinationElement extends Components.PagePickuppointAirportDestination, HTMLStencilElement {
    }
    var HTMLPagePickuppointAirportDestinationElement: {
        prototype: HTMLPagePickuppointAirportDestinationElement;
        new (): HTMLPagePickuppointAirportDestinationElement;
    };
    interface HTMLPageRoundtripPickupElement extends Components.PageRoundtripPickup, HTMLStencilElement {
    }
    var HTMLPageRoundtripPickupElement: {
        prototype: HTMLPageRoundtripPickupElement;
        new (): HTMLPageRoundtripPickupElement;
    };
    interface HTMLRouteCardElement extends Components.RouteCard, HTMLStencilElement {
    }
    var HTMLRouteCardElement: {
        prototype: HTMLRouteCardElement;
        new (): HTMLRouteCardElement;
    };
    interface HTMLTitleComponentElement extends Components.TitleComponent, HTMLStencilElement {
    }
    var HTMLTitleComponentElement: {
        prototype: HTMLTitleComponentElement;
        new (): HTMLTitleComponentElement;
    };
    interface HTMLElementTagNameMap {
        "home-page": HTMLHomePageElement;
        "main-screen": HTMLMainScreenElement;
        "modal-button": HTMLModalButtonElement;
        "modal-component": HTMLModalComponentElement;
        "page-arrival-to-final-destination": HTMLPageArrivalToFinalDestinationElement;
        "page-pickup-point": HTMLPagePickupPointElement;
        "page-pickuppoint-airport-destination": HTMLPagePickuppointAirportDestinationElement;
        "page-roundtrip-pickup": HTMLPageRoundtripPickupElement;
        "route-card": HTMLRouteCardElement;
        "title-component": HTMLTitleComponentElement;
    }
}
declare namespace LocalJSX {
    interface HomePage {
    }
    interface MainScreen {
    }
    interface ModalButton {
        "class"?: string;
        "externalbtn"?: string;
    }
    interface ModalComponent {
        "logoIcon"?: string;
        "opened"?: boolean;
        "previousBtn"?: string;
        "requiredid"?: string;
    }
    interface PageArrivalToFinalDestination {
        "logoIcon"?: string;
    }
    interface PagePickupPoint {
        "logoIcon"?: string;
    }
    interface PagePickuppointAirportDestination {
        "logoIcon"?: string;
    }
    interface PageRoundtripPickup {
        "logoIcon"?: string;
    }
    interface RouteCard {
        "faqIcon"?: string;
        "pathname"?: string;
        "places"?: string;
    }
    interface TitleComponent {
    }
    interface IntrinsicElements {
        "home-page": HomePage;
        "main-screen": MainScreen;
        "modal-button": ModalButton;
        "modal-component": ModalComponent;
        "page-arrival-to-final-destination": PageArrivalToFinalDestination;
        "page-pickup-point": PagePickupPoint;
        "page-pickuppoint-airport-destination": PagePickuppointAirportDestination;
        "page-roundtrip-pickup": PageRoundtripPickup;
        "route-card": RouteCard;
        "title-component": TitleComponent;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "home-page": LocalJSX.HomePage & JSXBase.HTMLAttributes<HTMLHomePageElement>;
            "main-screen": LocalJSX.MainScreen & JSXBase.HTMLAttributes<HTMLMainScreenElement>;
            "modal-button": LocalJSX.ModalButton & JSXBase.HTMLAttributes<HTMLModalButtonElement>;
            "modal-component": LocalJSX.ModalComponent & JSXBase.HTMLAttributes<HTMLModalComponentElement>;
            "page-arrival-to-final-destination": LocalJSX.PageArrivalToFinalDestination & JSXBase.HTMLAttributes<HTMLPageArrivalToFinalDestinationElement>;
            "page-pickup-point": LocalJSX.PagePickupPoint & JSXBase.HTMLAttributes<HTMLPagePickupPointElement>;
            "page-pickuppoint-airport-destination": LocalJSX.PagePickuppointAirportDestination & JSXBase.HTMLAttributes<HTMLPagePickuppointAirportDestinationElement>;
            "page-roundtrip-pickup": LocalJSX.PageRoundtripPickup & JSXBase.HTMLAttributes<HTMLPageRoundtripPickupElement>;
            "route-card": LocalJSX.RouteCard & JSXBase.HTMLAttributes<HTMLRouteCardElement>;
            "title-component": LocalJSX.TitleComponent & JSXBase.HTMLAttributes<HTMLTitleComponentElement>;
        }
    }
}
